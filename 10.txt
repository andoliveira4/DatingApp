Angular
{
	ng serve
	ng g guard auth --skipTests //Cria Guards das rotas
}

Libraries
{
	npm install alertfyjs
}

dotnet --info //pega info dos sdks instalados
dotnet -h //help 

dotnet new -n Datting.API
dotnet watch run //roda a aplicação sem ter que ficar rodando toda hora

dotnet ef migrations add AddedUserEntity
dotnet ef database update //roda o migration

Nuget
{

	Microsoft.IdentityModel.Tokens
	System.IdentityModel.Tokens.Jwt
	Microsoft.AspNetCore.Authentication.JwtBearer
}

vscode{

	Ctrl+Shift+P Command Palette
	Ctrl+. mostra a solução dos erros
	Ctrl+P Busca o arquivo que vc quer
	Alt+Shift+F Formata o codigo
	
	plugins
	{
		c# //by ominisharp
		c# extentions //by jchannon
		nuget package manager //by jmrog		
	}	
}


tirar pastas inuteis do vscode 
{

	File>Preferences>Settings>Search for exclude
	No Menu Clique em "Text Editor" e em "Files"
	clique no botao add pattern e escreva **/obj
	clique no botao add pattern e escreva **/bin
	
}


sites
{
	open rash
	https://md5decrypt.net/en/Sha512/
	https://jwt.io/ (abre o token jwt)
}



Patters usados
{

	Repository Pattern

}


Adicionais
{
	https://alertifyjs.com/ - (SPA) Criar popupscoloridos para mensagens de sucesso, erro e alertas
	https://github.com/auth0/angular2-jwt - (SPA) Valida tokens jwt dentro do SPA (npm install @auth0/angular-jwt)
	https://valor-software.com/ngx-bootstrap/#/ - (SPA) ajuda a importar coisas do bootstrap como dropwdowslist (npm install ngx-bootstrap@3.0.1 --save)
	https://bootswatch.com/help/ - (SPA) Temas - npm install bootswatch@4.1.1 (instalar a mesma versao igual a do bootstrap)
	
}



Angular{
	Rout guards servem para proteger as rotas contra acessos sem o usuário estar logado
}